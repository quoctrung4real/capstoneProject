@font-face {
  font-family: "Mona Sans";
  src: url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2 supports variations"),
    url("https://assets.codepen.io/64/Mona-Sans.woff2")
      format("woff2-variations");
  font-weight: 100 1000;
}

@layer properties {
  @property --checkbox-color-hue {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --checkbox-color-saturation {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --checkbox-color-lightness {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --checkbox-color-light-lightness {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --icon-opacity {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --icon-invert {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --icon-size {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --negative-shadow-offset {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
  @property --text-opacity {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
  }
}

:root {
  /* -- Colors: */
  --body-bg-color: hsl(221deg 16% 12%);
  --checkbox-color-hue: 252;
  --checkbox-color-saturation: 49;
  --checkbox-color-lightness: 49;
  --checkbox-color: hsl(
    calc(var(--checkbox-color-hue) * 1deg) /**/
      calc(var(--checkbox-color-saturation) * 1%) /**/
      calc(var(--checkbox-color-lightness) * 1%) /**/
  );
  --checkbox-color-light: rgba(255 255 255 / 32%);
  --checkbox-color-dark: rgba(0 0 0 / 45%);

  /* -- Box */
  --checkbox-border-radius: 24%;
  --checkbox-width: 10;
  --checkbox-height: 10;

  --text-opacity: 0.6;

  --negative-shadow-offset: 500;
  --active-shadow-opacity: 0;

  /* -- icon */
  --icon-check: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' fill='none' stroke='white' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' class='feather feather-check'%3E%3Cpath d='M20 6 9 17l-5-5'/%3E%3C/svg%3E");
  --icon-opacity: 0;
  --icon-size: 1;

  /* -- easing */
  --cubic-bezier: cubic-bezier(0.6, -1.2, 0.2, 2.2);

  /* -- misc */
  --debug: 0;
}

.section {
  display: flex;
  width: 400px;
  gap: 1rem;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  & > .tilte {
    text-align: center;
    width: 100;
    & > h3 {
      font-size: 30px;
      font-family: "Roboto", sans-serif;
      font-weight: 300;
      font-style: normal;
      color: #42427d;
    }
  }
  & > .form-forgot-password {
    width: 100%;
    border: 1px solid #000000;
    border-radius: 50px 10px;
    background-color: #5840bb;
    & > form {
      padding: 10px;
      & > .section-input {
        padding: 0 2rem;
        margin: 2rem 1rem;
        box-sizing: border-box;
        display: flex;
        flex-direction: column;
        gap: 1rem;
        & > .input-group {
          display: flex;
          align-items: center;
          gap: 1rem;
          & > .icon {
            width: 35px;
            height: 35px;
            display: flex;
            align-items: center;
            justify-content: center;
            & > i::before {
              font-size: 1.5rem;
              color: #ffffff;
            }
          }
          & > .input {
            width: 100%;
            & > input {
              width: 100%;
              border: none;
              outline: none;
              background-color: #5840bb !important;
              padding: 10px;
              box-sizing: border-box;
              border-radius: 5px;
              font-size: 15px;
              color: #ffffff;
              font-family: "Roboto", sans-serif;
              font-weight: 300;
              font-style: normal;
              &::placeholder {
                color: #ffffff;
                font-family: "Roboto", sans-serif;
                font-weight: 300;
                font-style: normal;
              }
            }
          }
        }
      }
      & > .section-forgot-password {
        display: flex;
        padding: 0 2rem;
        box-sizing: border-box;
        margin-top: 1rem;
        justify-content: flex-end;
        & > .forgot-password {
          cursor: pointer;
          transition: all 1s ease-in-out;
          & > span {
            font-family: "Roboto", sans-serif;
            font-weight: 700;
            font-style: normal;
            font-size: 10px;
            line-height: 12.8px;
            color: #ffffff;
            text-decoration: none;
          }
          &:hover > span {
            text-decoration: underline;
          }
        }
      }
      & > .divide {
        padding: 0 2rem;
        margin-top: 0.5rem;
        box-sizing: border-box;
        & > div {
          height: 5px;
          background-color: #ffffff;
          border-radius: 60px;
        }
      }
      & > .section-google-login {
        padding: 0 2rem;
        box-sizing: border-box;
        margin-top: 0.5rem;
        & > .google-login {
          display: flex;
          align-items: center;
          justify-content: center;
          flex-direction: column;
          gap: 0.5rem;
          & > span {
            font-size: 16px;
            color: #ffffff;
            font-family: "Roboto", sans-serif;
            font-weight: 100;
          }
          & > span:last-child {
            cursor: pointer;
          }
          & > .btn-google {
            padding: 8px 10px;
            background-color: #5840bb;
            border: none;
            cursor: pointer;
            & > svg {
              color: #ffffff;
              font-size: 1.7rem;
            }
          }
        }
      }
      & > .section-term-conditions {
        padding: 0 2rem;
        box-sizing: border-box;
        margin-top: 2.5rem;
        & > .term-conditions {
          display: flex;
          justify-content: center;
          gap: 1rem;
          flex-direction: column;
          & > .select-box {
            display: flex;
            gap: 1rem;
            align-items: center;
            & > label {
              cursor: pointer;
              position: relative;
              display: flex;
              align-items: center;
              justify-content: center;
              grid-gap: 18px;

              /* text settings */
              color: rgba(255 255 255 / var(--text-opacity));
              font-size: 10px;
              letter-spacing: 0.1em;
              font-weight: 400;

              transition: --text-opacity 0.2s ease;

              &:hover {
                --text-opacity: 1;
                &:after {
                  --icon-opacity: 0.5;
                  --icon-invert: 100;
                  --icon-size: 0.8;
                }

                input[type="checkbox"] {
                  --checkbox-color-hue: 216;
                  --checkbox-color-saturation: 14;
                  --checkbox-color-lightness: 18;
                  --checkbox-color: hsl(
                    calc(var(--checkbox-color-hue) * 1deg)
                      calc(var(--checkbox-color-saturation) * 1%)
                      calc(var(--checkbox-color-lightness) * 1%)
                  );
                }
              }

              /* label:after */
              &:after {
                content: "";
                display: block;
                position: absolute;
                width: calc(var(--checkbox-width) * 1px);
                height: calc(var(--checkbox-height) * 1px);
                top: 0;
                left: 0;
                background-repeat: no-repeat;
                background-position: center center;
                background-size: 70%;
                border-radius: var(--checkbox-border-radius);
                pointer-events: none;
                background-image: var(--icon-check);
                filter: invert(100%);
                opacity: var(--icon-opacity);
                transform: scale(var(--icon-size));

                /* here I couldn't animate --icon-invert */
                transition: opacity 0.3s ease, filter 0.3s ease,
                  transform 0.3s var(--cubic-bezier);
              }

              &:has(input[type="checkbox"]:checked) {
                &:after {
                  --icon-opacity: 1;
                  // For a reason, this wasn't possible using Scss
                  // If anyone wants to break their teeth on it
                  // type this in sassmeister.com
                  /* 
                  div {
                    filter: invert(calc(var(--icon-invert) * 1%));
                  }
                  */
                  filter: invert(0%);
                }
              }

              /* label input[type="checkbox"] */
              & input[type="checkbox"] {
                appearance: none;
                cursor: pointer;
                margin: 0;
                background: var(--checkbox-color);
                width: calc(var(--checkbox-width) * 1px);
                height: calc(var(--checkbox-height) * 1px);
                border: calc(calc(var(--checkbox-width) / 15) * 1px) solid
                  #ffffff;
                border-radius: var(--checkbox-border-radius);
                box-shadow: inset 0 0
                    calc(calc(var(--checkbox-width) / 10) * 1px)
                    rgba(0 0 0 / calc(var(--active-shadow-opacity))),
                  inset 0 calc(calc(var(--checkbox-width) / 20) * 1px)
                    calc(calc(var(--checkbox-width) / 30) * 1px)
                    calc(
                      calc(
                          var(--checkbox-width) / var(--negative-shadow-offset)
                        ) * -1px
                    )
                    var(--checkbox-color-light),
                  inset 0 calc(calc(var(--checkbox-width) / 20) * -1px)
                    calc(calc(var(--checkbox-width) / 15) * 1px)
                    calc(
                      calc(
                          var(--checkbox-width) / var(--negative-shadow-offset)
                        ) * -1px
                    )
                    var(--checkbox-color-dark);
                transition: --checkbox-color-hue 0.1s ease,
                  --checkbox-color-saturation 0.1s ease,
                  --checkbox-color-lightness 0.1s ease, --checkbox-color 0s ease,
                  --negative-shadow-offset 0.2s ease;

                &:active,
                &:checked {
                  --checkbox-color-hue: 252;
                  --checkbox-color-saturation: 49;
                  --checkbox-color-lightness: 49;
                  --checkbox-color: hsl(
                    calc(var(--checkbox-color-hue) * 1deg) /**/
                      calc(var(--checkbox-color-saturation) * 1%) /**/
                      calc(var(--checkbox-color-lightness) * 1%) /**/
                  );
                }

                &:checked {
                  --checkbox-color-hue: 265;
                  --checkbox-color-saturation: 49;
                  --checkbox-color-lightness: 49;
                  --checkbox-color: hsl(
                    calc(var(--checkbox-color-hue) * 1deg)
                      calc(var(--checkbox-color-saturation) * 1%)
                      calc(var(--checkbox-color-lightness) * 1%)
                  );
                }
              }

              &:active {
                --active-shadow-opacity: 0.8;
                &:after {
                  --icon-size: 0.7;
                }

                & input[type="checkbox"] {
                  --negative-shadow-offset: 0;
                }
              }
            }
          }
        }
      }
      & > .section-button-send-email {
        padding: 0 1rem;
        box-sizing: border-box;
        margin-top: 2.5rem;
        text-align: center;
        & > .button-send-email {
          & > button {
            width: 150px;
            height: 40px;
            padding: 10px 20px;
            background-color: #ffffff;
            color: #5840bb;
            border-radius: 3cqb 10px;
            border: 1px solid #000000;
            cursor: pointer;
            transition: background-color 0.3s ease;
            font-size: 14px;
            &:hover {
              background-color: #5840bb;
              color: #ffffff;
            }
            &:disabled {
              opacity: 0.5;
              cursor: not-allowed;
            }
          }
        }
      }
      & > .section-other {
        padding: 0 2rem;
        box-sizing: border-box;
        margin: 1rem 0;
        & > .other {
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 0.5rem;
          & > span {
            color: #ffffff;
            font-size: 14px;
            font-family: "Roboto", sans-serif;
            font-weight: 300;
            font-style: normal;
          }
          & > a {
            text-decoration: none;
            color: #000000;
            font-size: 14px;
            cursor: pointer;
            transition: all 0.3s ease-in-out;
            font-family: "Roboto", sans-serif;
            font-weight: 700;
            font-style: normal;
            &:hover {
              color: rgba(244, 31, 31, 0.807);
            }
          }
        }
      }
    }
  }
}
